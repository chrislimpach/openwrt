--- a/system-linux.c
+++ b/system-linux.c
@@ -1939,6 +1939,9 @@ static int system_addr(struct device *de
 			nla_put_u32(msg, IFA_FLAGS, IFA_F_NOPREFIXROUTE);
 	}
 
+	if (cmd == RTM_NEWADDR && addr->label)
+		nla_put_string(msg, IFA_LABEL, addr->label);
+
 	return system_rtnl_call(msg);
 }
 
--- a/interface-ip.c
+++ b/interface-ip.c
@@ -712,6 +712,7 @@ interface_update_proto_addr(struct vlist
 
 		if (!keep || replace) {
 			if (!(a_new->flags & DEVADDR_EXTERNAL)) {
+				a_new->label = iface->label;
 				if (system_add_address(dev, a_new))
 					a_new->failed = true;
 
@@ -1584,6 +1585,8 @@ void interface_ip_set_enabled(struct int
 			continue;
 
 		if (enabled) {
+			addr->label = iface->label;
+
 			system_add_address(dev, addr);
 
 			addr->policy_table = (v6) ? iface->ip6table : iface->ip4table;
--- a/interface-ip.h
+++ b/interface-ip.h
@@ -140,6 +140,8 @@ struct device_addr {
 	time_t preferred_until;
 	char *pclass;
 
+	const char *label;
+
 	/* must be last */
 	enum device_addr_flags flags;
 	unsigned int mask;
--- a/interface.c
+++ b/interface.c
@@ -47,6 +47,7 @@ enum {
 	IFACE_ATTR_IP6IFACEID,
 	IFACE_ATTR_FORCE_LINK,
 	IFACE_ATTR_IP6WEIGHT,
+	IFACE_ATTR_LABEL,
 	IFACE_ATTR_MAX
 };
 
@@ -70,6 +71,7 @@ static const struct blobmsg_policy iface
 	[IFACE_ATTR_IP6IFACEID] = { .name = "ip6ifaceid", .type = BLOBMSG_TYPE_STRING },
 	[IFACE_ATTR_FORCE_LINK] = { .name = "force_link", .type = BLOBMSG_TYPE_BOOL },
 	[IFACE_ATTR_IP6WEIGHT] = { .name = "ip6weight", .type = BLOBMSG_TYPE_INT32 },
+	[IFACE_ATTR_LABEL] = { .name = "label", .type = BLOBMSG_TYPE_STRING },
 };
 
 const struct uci_blob_param_list interface_attr_list = {
@@ -907,6 +909,8 @@ static bool __interface_add(struct inter
 	} else {
 		if ((cur = tb[IFACE_ATTR_IFNAME]))
 			iface->ifname = blobmsg_data(cur);
+		if ((cur = tb[IFACE_ATTR_LABEL]))
+			iface->label = blobmsg_data(cur);
 	}
 
 	if (iface->dynamic) {
@@ -1225,6 +1229,9 @@ interface_change_config(struct interface
 				       if_old->proto_handler->config_params))
 		reload = true;
 
+	if (FIELD_CHANGED_STR(label))
+		reload = true;
+
 #define UPDATE(field, __var) ({						\
 		bool __changed = (if_old->field != if_new->field);	\
 		if_old->field = if_new->field;				\
@@ -1247,6 +1254,7 @@ interface_change_config(struct interface
 	if_old->proto_handler = if_new->proto_handler;
 	if_old->force_link = if_new->force_link;
 	if_old->dns_metric = if_new->dns_metric;
+	if_old->label = if_new->label;
 
 	if (if_old->proto_ip.no_delegation != if_new->proto_ip.no_delegation) {
 		if_old->proto_ip.no_delegation = if_new->proto_ip.no_delegation;
--- a/interface.h
+++ b/interface.h
@@ -109,6 +109,8 @@ struct interface {
 	const char *name;
 	const char *ifname;
 
+	const char *label;
+
 	bool available;
 	bool autostart;
 	bool config_autostart;
